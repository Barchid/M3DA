import Sofa

import os


def createScene(rootNode):

    rootNode.createObject('RequiredPlugin', name='SofaPython')
    rootNode.createObject('VisualStyle', displayFlags='showVisualModels hideBehaviorModels showCollisionModels hideBoundingCollisionModels hideForceFields showInteractionForceFields hideWireframe')

    rootNode.findData('gravity').value = "0 -9.180 0"
    dt = 0.005
    rootNode.findData('dt').value = dt


    #rootNode.createObject('PythonScriptController', filename="controllerTP1.py", classname="controller")
    
    springs= rootNode.createChild('Springs')
    springs.createObject('EulerImplicitSolver', firstOrder="0", rayleighStiffness=0.01, rayleighMass='0')
    springs.createObject('SparseLDLSolver', name='solver', template='CompressedRowSparseMatrixd') # Solveur implicite permet de résoudre équation Ax = b du cours
    springs.createObject('GenericConstraintCorrection', solverName='solver') # contrainte, osef pour nous
    
    
    # Charger la couverture (mets un ressort de tou)
    springs.createObject('MeshObjLoader', filename='mesh/square_xz.obj', name='meshOBJ', scale='0.1')
    springs.createObject('Mesh', src='@meshOBJ', name='Mesh', drawEdges='0')
    springs.createObject('MechanicalObject', template="Vec3d", showObject="1", name="mObject")
    
    # Définir à la main le pendule avec les objets du maillage et les edges entre les boules etc
    #springs.createObject('MechanicalObject', position='0 0 0  10 0 0  15 0 10 ', template="Vec3d", showObject="1", name="mObject")
    #springs.createObject('Mesh', position='@mObject.position', edges ='0 1 1 2 ', name='Mesh', drawEdges='1')
    
    
    springs.createObject('MeshSpringForceField', linesStiffness='15') # Calcule des forces qu'on a fait en implicite et on peut définir une rigidité sur chacune des lignes
    springs.createObject('UniformMass', totalMass='0.3') # définir une masse et la filer de manière uniforme à toutes les particules (donc la couverture en entier fait 0.3)
    #springs.createObject('FixedConstraint', indices='0') # Fixer 0
    springs.createObject('FixedConstraint', indices='0 213')
    
    #springs.createObject('Triangle')
    #springs.createObject('Lines')
    #springs.createObject('Points')
    

    visualNode= springs.createChild('Visual')
    visualNode.createObject('Sphere', radius='0.1')
    



    return rootNode

